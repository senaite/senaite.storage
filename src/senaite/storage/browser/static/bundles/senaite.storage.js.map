{"version":3,"file":"senaite.storage.js","mappings":"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","sources":["webpack:///external var \"jQuery\"","webpack:///webpack/bootstrap","webpack:///./components/store_container.js","webpack:///./components/store_samples.js","webpack:///./senaite.storage.js"],"sourcesContent":["module.exports = jQuery;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\n/* Please use this command to compile this file into the proper folder:\n    coffee --no-header -w -o ../ -c store_container.coffee\n */\nvar StoreContainerController,\n  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\nStoreContainerController = (function() {\n\n  /*\n   * Store Samples in a Container view controller\n   */\n  function StoreContainerController() {\n    this.debug = bind(this.debug, this);\n    this.on_position_slot_click = bind(this.on_position_slot_click, this);\n    this.on_position_change = bind(this.on_position_change, this);\n    this.bind_eventhandler = bind(this.bind_eventhandler, this);\n    console.debug(\"StoreContainerController::init\");\n    this.bind_eventhandler();\n    $(\"#position\").change();\n    return this;\n  }\n\n  StoreContainerController.prototype.bind_eventhandler = function() {\n    this.debug(\"StoreContainerController::bind_eventhandler\");\n    $(\"body\").on(\"click\", \"a.position_slot_selector\", this.on_position_slot_click);\n    return $(\"body\").on(\"change\", \"#position\", this.on_position_change);\n  };\n\n  StoreContainerController.prototype.on_position_change = function(event) {\n\n    /*\n     * The selected value from the position selected list has changed. Make the\n     * counterpart position selector from the layout more visible\n     */\n    var select;\n    this.debug(\"StoreContainerController::on_position_change\");\n    select = $(event.currentTarget);\n    $(\"td.empty-slot\").removeClass(\"selected\");\n    return $(\"#\" + select.val()).parent(\"td.empty-slot\").addClass(\"selected\");\n  };\n\n  StoreContainerController.prototype.on_position_slot_click = function(event) {\n\n    /*\n     * The user has clicked to a position slot from the layout. Update the\n     * value for position selection list and submit\n     */\n    var anchor, sample_uid, select;\n    this.debug(\"StoreContainerController::on_position_slot_click\");\n    event.preventDefault();\n    anchor = $(event.currentTarget);\n    select = $(\"#position\").val(anchor.attr(\"id\"));\n    $(\"#position\").change();\n    sample_uid = $(\"#sample_uid\").val();\n    if (sample_uid) {\n      return $(\"#button_store\").click();\n    }\n  };\n\n  StoreContainerController.prototype.debug = function(message) {\n    return console.debug(\"[senaite.storage] \" + message);\n  };\n\n  return StoreContainerController;\n\n})();\n\nexport default StoreContainerController;\n","\n/* Please use this command to compile this file into the proper folder:\n    coffee --no-header -w -o ../ -c store_samples.coffee\n */\nvar StoreSamplesController,\n  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\nStoreSamplesController = (function() {\n\n  /*\n   * Store Samples view controller\n   */\n  function StoreSamplesController() {\n    this.debug = bind(this.debug, this);\n    this.get_portal_url = bind(this.get_portal_url, this);\n    this.ajax_submit = bind(this.ajax_submit, this);\n    this.fetch_available_positions = bind(this.fetch_available_positions, this);\n    this.get_selected_positions = bind(this.get_selected_positions, this);\n    this.diff = bind(this.diff, this);\n    this.fill_container_positions = bind(this.fill_container_positions, this);\n    this.get_container_position_selects = bind(this.get_container_position_selects, this);\n    this.purge_container_position = bind(this.purge_container_position, this);\n    this.add_container_position = bind(this.add_container_position, this);\n    this.on_container_position_change = bind(this.on_container_position_change, this);\n    this.on_container_change = bind(this.on_container_change, this);\n    this.bind_eventhandler = bind(this.bind_eventhandler, this);\n    console.debug(\"StoreSamplesController::init\");\n    this.bind_eventhandler();\n    return this;\n  }\n\n  StoreSamplesController.prototype.bind_eventhandler = function() {\n    this.debug(\"StoreSamplesController::bind_eventhandler\");\n    $(\"body\").on(\"select\", \".senaite-uidreference-widget-input textarea\", this.on_container_change);\n    $(\"body\").on(\"deselect\", \".senaite-uidreference-widget-input textarea\", this.on_container_change);\n    return $(\"body\").on(\"change\", \"select[container_uid]\", this.on_container_position_change);\n  };\n\n  StoreSamplesController.prototype.on_container_change = function(event) {\n\n    /*\n     * Fills the select element next to the container input with the positions\n     * that are available for storage\n     */\n    var container_uid, el, parent, sample_uid, select;\n    this.debug(\"StoreSamplesController::on_container_change\");\n    el = $(event.currentTarget);\n    parent = el.closest(\"div.senaite-uidreference-widget-input\");\n    container_uid = event.detail.value;\n    sample_uid = parent.attr(\"sample_uid\");\n    select = $(\"select#sample_container_position_\" + sample_uid)[0];\n    this.fill_container_positions(container_uid, select);\n  };\n\n  StoreSamplesController.prototype.on_container_position_change = function(event) {\n\n    /*\n     * Purges the positions from other select elements that are bounded to\n     * same container. This ensures that a given position within a container can\n     * only be selected once\n     */\n    var container_uid, orig_value, position, select;\n    this.debug(\"StoreSamplesController::on_container_position_change\");\n    select = $(event.currentTarget);\n    container_uid = select.attr(\"container_uid\");\n    if (!container_uid) {\n      return;\n    }\n    position = select.val();\n    this.purge_container_position(container_uid, position);\n    orig_value = select.attr(\"original_value\");\n    $(select).attr(\"original_value\", position);\n    if (!orig_value) {\n      return;\n    }\n    return this.add_container_position(container_uid, orig_value);\n  };\n\n  StoreSamplesController.prototype.add_container_position = function(container_uid, position) {\n\n    /*\n     * Adds the option for the specified position to all select elements that\n     * are bound to the container passed in that do not contain this position\n     * already\n     */\n    var selects;\n    this.debug(\"StoreSamplesController::add_container_position:container_uid=\" + container_uid + \", position=\" + position);\n    selects = this.get_container_position_selects(container_uid);\n    $.each(selects, function(index, select) {\n      var options, orig_value, positions;\n      options = $(select).find(\"option\");\n      positions = $(options).map(function() {\n        return $(this).val();\n      });\n      positions = $.makeArray(positions);\n      if (positions.indexOf(position) >= 0) {\n        return;\n      }\n      positions.push(position);\n      positions.sort();\n      orig_value = $(select).val();\n      $(select).find(\"option\").remove();\n      $.each(positions, function(index, new_position) {\n        return $(select).append(new Option(new_position, new_position));\n      });\n      return $(select).val(orig_value);\n    });\n  };\n\n  StoreSamplesController.prototype.purge_container_position = function(container_uid, position) {\n\n    /*\n     * Removes the option for the specified position from all select elements\n     * that are bound to the container passed in. It only affects to those\n     * elements that have a position selected other than the one passed in.\n     */\n    var selects;\n    this.debug(\"StoreSamplesController::purge_container_position:container_uid=\" + container_uid + \", position=\" + position);\n    selects = this.get_container_position_selects(container_uid);\n    $.each(selects, function(index, select) {\n      if ($(select).val() !== position) {\n        return $(select).find(\"option[value='\" + position + \"']\").remove();\n      }\n    });\n  };\n\n  StoreSamplesController.prototype.get_container_position_selects = function(container_uid) {\n\n    /*\n     * Returns all DOM select elements for layout position selection that are\n     * bound to the container passed in\n     */\n    this.debug(\"StoreSamplesController::get_container_position_selects:container_uid=\" + container_uid);\n    return $(\"select[container_uid='\" + container_uid + \"']\");\n  };\n\n  StoreSamplesController.prototype.fill_container_positions = function(container_uid, select) {\n\n    /*\n     * Populates the select DOM element with options that are the positions\n     * the container has available for storage. The first option is set as the\n     * default value for the select element and the rest of select elements for\n     * same container are updated accordingly to prevent same position to be\n     * assigned twice\n     */\n    this.debug(\"StoreSamplesController::fill_container_positions:container_uid=\" + container_uid);\n    $(select).find(\"option\").remove();\n    $(select).attr(\"original_value\", \"\");\n    $(select).attr(\"container_uid\", container_uid);\n    this.fetch_available_positions(container_uid).done(function(positions) {\n      var available, i, len, position, selected_positions;\n      selected_positions = this.get_selected_positions(container_uid);\n      available = this.diff(positions, $.makeArray(selected_positions));\n      for (i = 0, len = available.length; i < len; i++) {\n        position = available[i];\n        $(select).append(new Option(position, position));\n      }\n      $(select).val(available[0]);\n      $(select).trigger(\"change\");\n    }).fail(function() {\n      console.warn(\"Failed to get available positions\");\n    });\n  };\n\n  StoreSamplesController.prototype.diff = function(a1, a2) {\n\n    /*\n     * Returns the difference (intersection) between two arrays\n     */\n    return a1.concat(a2).filter(function(val, index, arr) {\n      return arr.indexOf(val) === arr.lastIndexOf(val);\n    });\n  };\n\n  StoreSamplesController.prototype.get_selected_positions = function(container_uid) {\n\n    /*\n     * Return the positions that are currently selected in the form for a given\n     * container\n     */\n    var selects;\n    selects = this.get_container_position_selects(container_uid);\n    return $(selects).map(function() {\n      return $(this).val();\n    });\n  };\n\n  StoreSamplesController.prototype.fetch_available_positions = function(uid) {\n\n    /*\n     * Returns the available positions from a sample container with the uid\n     * passed in. If no container found for this uid, returns null\n     */\n    var deferred, field_name;\n    deferred = $.Deferred();\n    field_name = \"AvailablePositions\";\n    this.ajax_submit({\n      url: this.get_portal_url() + \"/@@API/read\",\n      data: {\n        catalog_name: \"uid_catalog\",\n        UID: uid,\n        include_fields: [field_name]\n      }\n    }).done(function(data) {\n      return deferred.resolveWith(this, [data.objects[0][field_name]]);\n    });\n    return deferred.promise();\n  };\n\n  StoreSamplesController.prototype.ajax_submit = function(options) {\n    var done;\n    if (options == null) {\n      options = {};\n    }\n    if (options.type == null) {\n      options.type = \"POST\";\n    }\n    if (options.url == null) {\n      options.url = this.get_portal_url();\n    }\n    if (options.context == null) {\n      options.context = this;\n    }\n    if (options.dataType == null) {\n      options.dataType = \"json\";\n    }\n    if (options.data == null) {\n      options.data = {};\n    }\n    this.debug(\"ajax_submit::options=\", options);\n    $(this).trigger(\"ajax:submit:start\");\n    done = function() {\n      return $(this).trigger(\"ajax:submit:end\");\n    };\n    return $.ajax(options).done(done);\n  };\n\n  StoreSamplesController.prototype.get_portal_url = function() {\n\n    /*\n     * Return the portal url (calculated in code)\n     */\n    var url;\n    url = $(\"input[name=portal_url]\").val();\n    return url || window.portal_url;\n  };\n\n  StoreSamplesController.prototype.debug = function(message) {\n    return console.debug(\"[senaite.storage] \" + message);\n  };\n\n  return StoreSamplesController;\n\n})();\n\nexport default StoreSamplesController;\n","import StoreContainerController from \"./components/store_container.js\"\nimport StoreSamplesController from \"./components/store_samples.js\"\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  console.debug(\"*** SENAITE STORAGE JS LOADED ***\");\n\n  // Initialize controllers\n  var class_list = document.body.classList;\n  if (class_list.contains(\"template-storage_store_container\")) {\n    window.store_container_controller = new StoreContainerController();\n  }\n  if (class_list.contains(\"template-storage_store_samples\")) {\n    window.store_samples_controller = new StoreSamplesController();\n  }\n\n});\n"],"names":["module","exports","jQuery","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","bind","fn","me","apply","arguments","StoreContainerController","this","debug","on_position_slot_click","on_position_change","bind_eventhandler","console","$","change","prototype","on","event","select","currentTarget","removeClass","val","parent","addClass","anchor","preventDefault","attr","click","message","StoreSamplesController","get_portal_url","ajax_submit","fetch_available_positions","get_selected_positions","diff","fill_container_positions","get_container_position_selects","purge_container_position","add_container_position","on_container_position_change","on_container_change","container_uid","sample_uid","closest","detail","value","orig_value","position","selects","each","index","options","positions","find","map","makeArray","indexOf","push","sort","remove","new_position","append","Option","done","available","i","len","selected_positions","length","trigger","fail","warn","a1","a2","concat","filter","arr","lastIndexOf","uid","deferred","field_name","Deferred","url","data","catalog_name","UID","include_fields","resolveWith","objects","promise","type","context","dataType","ajax","window","portal_url","document","addEventListener","class_list","body","classList","contains","store_container_controller","store_samples_controller"],"sourceRoot":""}